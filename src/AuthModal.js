import React, { useState, useEffect } from "react";
import axios from "axios";

const AuthModal = ({ isAuthModalOpen, toggleAuthModal, onLoginSuccess }) => {
    const [phone, setPhone] = useState("");
    const [smsCode, setSmsCode] = useState("");
    const [step, setStep] = useState(1); // 1 - –≤–≤–æ–¥ –Ω–æ–º–µ—Ä–∞, 2 - –≤–≤–æ–¥ –∫–æ–¥–∞
    const [errorMessage, setErrorMessage] = useState(""); // ‚úÖ –û—à–∏–±–∫–∏

    // ‚úÖ –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –æ–∫–Ω–∞
    useEffect(() => {
        if (!isAuthModalOpen) {
            setPhone("");
            setSmsCode("");
            setStep(1);
            setErrorMessage("");
        }
    }, [isAuthModalOpen]);

    const handleRequestSMS = async () => {
        try {
            await axios.post("http://localhost:5000/api/auth/request-sms", { phone });
            setStep(2);
            setErrorMessage(""); // –û—á–∏—Å—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ SMS:", error);
            setErrorMessage("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ SMS. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
        }
    };

    const handleLogin = async () => {
        try {
            const response = await axios.post("http://localhost:5000/api/auth/login", { phone, smsCode });
            localStorage.setItem("token", response.data.token);
            
            if (onLoginSuccess) onLoginSuccess();
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:", error);
            setErrorMessage("–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
        }
    };

    return (
        isAuthModalOpen && (
            <div className="modal-overlay" onClick={toggleAuthModal}>
                <div className="modal-content" onClick={(e) => e.stopPropagation()}>
                    <button className="close-button" onClick={toggleAuthModal}>√ó</button>
                    <h2>–í—Ö–æ–¥</h2>

                    {step === 1 ? (
                        <>
                            <label htmlFor="phone">–ú–æ–±–∏–ª—å–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω:</label>
                            <input
                                type="tel"
                                id="phone"
                                name="phone"
                                value={phone}
                                onChange={(e) => setPhone(e.target.value)}
                                placeholder="+7 (___) ___-__-__"
                                required
                            />
                            <button onClick={handleRequestSMS} className="submit-button">
                                –ü–æ–ª—É—á–∏—Ç—å –∫–æ–¥
                            </button>
                        </>
                    ) : (
                        <>
                            <label htmlFor="smsCode">–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ SMS:</label>
                            <input
                                type="text"
                                id="smsCode"
                                name="smsCode"
                                value={smsCode}
                                onChange={(e) => setSmsCode(e.target.value)}
                                placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥"
                                required
                            />
                            <button onClick={handleLogin} className="submit-button">
                                –í–æ–π—Ç–∏
                            </button>
                        </>
                    )}

                    {/* üîπ –í—ã–≤–æ–¥ –æ—à–∏–±–∫–∏ */}
                    {errorMessage && <p style={{ color: "red", marginTop: "10px" }}>{errorMessage}</p>}
                </div>
            </div>
        )
    );
};

export default AuthModal;
