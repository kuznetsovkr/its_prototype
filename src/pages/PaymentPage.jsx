import React, { useEffect } from "react";
import { useLocation, useNavigate } from "react-router-dom";

const PaymentPage = () => {
    const location = useLocation();
    const navigate = useNavigate();
    const { userData, selectedProduct } = location.state || {};
    
    console.log ("—é–∑–µ—Ä");
    console.log (userData);

useEffect(() => {
    let isMounted = true; // –§–ª–∞–≥ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è

    const processPayment = async () => {
        if (!isMounted) return; // –ï—Å–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω ‚Äî –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–¥

        console.log("üõí –ò–º–∏—Ç–∞—Ü–∏—è –æ–ø–ª–∞—Ç—ã...");
        
            console.log("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –Ω–∞ —Å–µ—Ä–≤–µ—Ä —Å –¥–∞–Ω–Ω—ã–º–∏:", {
            firstName: userData?.firstName || "",
            lastName: userData?.lastName || "",
            middleName: userData?.middleName || "",
            phone: userData?.phone || "",
            productType: selectedProduct.productType,
            color: selectedProduct.color,
            size: selectedProduct.size,
            embroideryType: selectedProduct.embroideryType,
            customText: selectedProduct.customText,
            uploadedImage: selectedProduct.uploadedImage,
            comment: selectedProduct.comment,
        });

        setTimeout(async () => {
            if (!isMounted) return; // –í—Ç–æ—Ä–∏—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞

            console.log("‚úÖ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!");

            try {
                const response = await fetch("http://localhost:5000/api/orders/create", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                        Authorization: `Bearer ${localStorage.getItem("token")}`,
                    },
                    body: JSON.stringify({
                        firstName: userData?.firstName || "",
                        lastName: userData?.lastName || "",
                        middleName: userData?.middleName || "",
                        phone: userData?.phone || "",
                        productType: selectedProduct.productType,
                        color: selectedProduct.color,
                        size: selectedProduct.size,
                        embroideryType: selectedProduct.embroideryType,
                        customText: selectedProduct.customText,
                        uploadedImage: selectedProduct.uploadedImage,
                        comment: selectedProduct.comment,
                    }),
                });

                const data = await response.json();
                if (response.ok) {
                    console.log("‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram!");
                    navigate("/thank-you", { state: { orderNumber: data.orderId } });
                } else {
                    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞:", data.message);
                }
            } catch (error) {
                console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞:", error);
            }
        }, 3000);
    };

    processPayment();

    return () => {
        isMounted = false; // –ü–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º –∏–∑ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –æ—Ç–∫–ª—é—á–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—ã–∑–æ–≤
    };
}, []);  // ‚úÖ –£–±—Ä–∞–ª–∏ `navigate, location.state`, —Ç–µ–ø–µ—Ä—å —Å—Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ 1 —Ä–∞–∑



    return (
        <div style={{ textAlign: "center", padding: "20px" }}>
            <h1>üîÑ –û–ø–ª–∞—Ç–∞...</h1>
            <p>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ, –ø–æ–∫–∞ –≤–∞—à –ø–ª–∞—Ç—ë–∂ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è.</p>
        </div>
    );
};

export default PaymentPage;
