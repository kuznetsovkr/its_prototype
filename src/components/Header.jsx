import React, { useState, useEffect } from "react";
import { Link, useNavigate } from "react-router-dom";
import logo from "../images/logo_its.jpg";
import auth from "../images/free-icon-font-user-3917688.svg";
import AuthModal from "../AuthModal";

const Header = () => {
    const [isAuthModalOpen, setIsAuthModalOpen] = useState(false);
    const [isOrderModalOpen, setIsOrderModalOpen] = useState(false);
    const [orderStatus, setOrderStatus] = useState(null);
    const [orderNumber, setOrderNumber] = useState("");
    const [isAuthenticated, setIsAuthenticated] = useState(!!localStorage.getItem("token"));
    const navigate = useNavigate();

    const toggleOrderModal = () => setIsOrderModalOpen(!isOrderModalOpen);

    const handleOrderSubmit = (e) => {
        e.preventDefault();
        setOrderStatus(`–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ ‚Ññ${orderNumber}: –í –ø—É—Ç–∏`);
    };

    // üîπ –§—É–Ω–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—Ö–æ–¥–∞, –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –ª–æ–≥–∏–Ω–∞
    const handleLoginSuccess = () => {
        setIsAuthenticated(true);
        setIsAuthModalOpen(false);
    };

    // üîπ –°–ª–µ–¥–∏–º –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º —Ç–æ–∫–µ–Ω–∞ –≤ `localStorage`
    useEffect(() => {
        const handleStorageChange = () => {
            setIsAuthenticated(!!localStorage.getItem("token"));
        };

        window.addEventListener("storage", handleStorageChange);
        return () => {
            window.removeEventListener("storage", handleStorageChange);
        };
    }, []);

    // üîπ –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–∫–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø—Ä–æ—Ñ–∏–ª—è
    const handleAuthClick = () => {
        if (isAuthenticated) {
            navigate("/profile");
        } else {
            setIsAuthModalOpen(true);
        }
    };

    return (
        <>
            <header className="header">
                <div className="logo" onClick={() => navigate("/")}>
                    <img src={logo} alt="Logo" />
                </div>

                <nav className="navigation">
                    <Link to="/works" className="nav-link">–ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç</Link>
                    <Link to="/about" className="nav-link">–û –Ω–∞—Å</Link>
                    <Link to="/delivery" className="nav-link">–î–æ—Å—Ç–∞–≤–∫–∞ –∏ –æ–ø–ª–∞—Ç–∞</Link>
                </nav>

                <div className="order-tracking">
                    <button className="track-order-button" onClick={toggleOrderModal}>
                        –û—Ç—Å–ª–µ–¥–∏—Ç—å –∑–∞–∫–∞–∑
                    </button>
                </div>

                {/* üîπ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø–µ—Ä–µ–¥ –æ—Ç–∫—Ä—ã—Ç–∏–µ–º –æ–∫–Ω–∞ */}
                <div className="auth-button" onClick={handleAuthClick}>
                    <img src={auth} alt="auth" className="auth-button" />
                </div>

                {/* –ü–µ—Ä–µ–¥–∞–µ–º `onLoginSuccess`, —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–ª—è—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –ª–æ–≥–∏–Ω–µ */}
                <AuthModal 
                    isAuthModalOpen={isAuthModalOpen} 
                    toggleAuthModal={() => setIsAuthModalOpen(false)}
                    onLoginSuccess={handleLoginSuccess}
                />
            </header>

            {isOrderModalOpen && (
                <div className="modal-overlay" onClick={toggleOrderModal}>
                    <div className="modal-content" onClick={(e) => e.stopPropagation()}>
                        <button className="close-button" onClick={toggleOrderModal}>√ó</button>
                        <h2>–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞</h2>
                        <form onSubmit={handleOrderSubmit}>
                            <label htmlFor="order">–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:</label>
                            <input
                                type="text"
                                id="order"
                                value={orderNumber}
                                onChange={(e) => setOrderNumber(e.target.value)}
                                placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞"
                                required
                            />
                            <button type="submit" className="submit-button">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
                        </form>
                        {orderStatus && <p className="order-status">{orderStatus}</p>}
                    </div>
                </div>
            )}
        </>
    );
};

export default Header;
